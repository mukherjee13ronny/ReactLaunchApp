{"version":3,"sources":["components/table.js","components/charts.js","store/actionTypes.js","components/searchParameters.js","store/actions/launchAction.js","App.js","store/reducers/launchReducer.js","store/redux-store.js","index.js"],"names":["LaunchTable","state","data","nextProps","this","setState","dataSet","classes","props","Fragment","length","Paper","Table","className","table","TableHead","thead","TableRow","headRow","TableCell","headerCell","align","TableBody","map","row","key","name","tableCell","scope","location","windowstart","windowend","rocket","countryCode","Component","withStyles","theme","position","margin","width","border","height","backgroundColor","color","background","paddingRight","paddingLeft","BarChart","countryCount","xType","yDomain","obj","label","x","toString","concat","y","labelAnchorX","labelAnchorY","React","LAUNCH_ACTION","searchParameters","search","a","queryParams","startDate","endDate","launchAction","handleInputChange","bind","e","target","value","countryObj","countryArray","searchResultsVo","forEach","i","console","log","push","type","id","class","placeholder","onChange","required","Button","variant","onClick","mapDispatchToProps","dispatch","axios","get","then","response","ActionTypes","payload","catch","error","connect","launchData","searchResultList","App","initialState","appReducer","combineReducers","action","launches","rootReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f60b7ea.chunk.js","sourcesContent":["/**Table Component for Data Display from Response using Material-UI */\r\n\r\nimport React, {Component} from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst styles = theme => ({\r\n  table: {\r\n    position: \"relative\",\r\n    margin: \"auto\",\r\n    width: \"100%\",\r\n    border: \"1px solid rgba(0,0,0,0.1)\"\r\n  },\r\n  row: {\r\n    height: \"30px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#f2f2f2\",\r\n      color: \"white\"\r\n    }\r\n  },\r\n  thead: {\r\n    height: \"30px\",\r\n    background:\"#053674\",\r\n    color: \"#fff\"\r\n  },\r\n  headRow: {\r\n    height: \"34px\"\r\n  },\r\n  headerCell: {\r\n    color: \"white\",\r\n    paddingRight: 4,\r\n    paddingLeft: 5\r\n  },\r\n  tableCell: {\r\n    paddingRight: 4,\r\n    paddingLeft: 5,\r\n    height: \"34px\"\r\n  },\r\n});\r\n\r\n class LaunchTable extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: []\r\n        };\r\n    }\r\n\r\n    \r\n    \r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            data: nextProps.dataSet\r\n        });\r\n    }\r\n    \r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n<React.Fragment>\r\n  {this.props.dataSet  && this.props.dataSet.length > 0?\r\n        (<Paper>\r\n        <Table className={classes.table}>\r\n          <TableHead className={classes.thead}>\r\n            <TableRow className={classes.headRow}>\r\n              <TableCell className={classes.headerCell}>Name</TableCell>\r\n              <TableCell className={classes.headerCell} align=\"right\">Location</TableCell>\r\n              <TableCell className={classes.headerCell} align=\"right\">Launch Window Start</TableCell>\r\n              <TableCell className={classes.headerCell} align=\"right\">Launch Window End</TableCell>\r\n              <TableCell className={classes.headerCell} align=\"right\">Rocket Name</TableCell>\r\n              <TableCell className={classes.headerCell} align=\"right\">Country</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.state.data.map(row => (\r\n              <TableRow className={classes.row} key={row.name}>\r\n                <TableCell className={classes.tableCell}  scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell className={classes.tableCell}  align=\"right\">\r\n                  {row.location.name}\r\n                </TableCell>\r\n                <TableCell className={classes.tableCell}  align=\"right\">{row.windowstart}</TableCell>\r\n                <TableCell className={classes.tableCell}  align=\"right\">{row.windowend}</TableCell>\r\n                <TableCell className={classes.tableCell}  align=\"right\">{row.rocket.name}</TableCell>\r\n                <TableCell className={classes.tableCell}  align=\"right\">{row.location.countryCode}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>):null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(LaunchTable);\r\n","/** react-vis library is used for Bar Chart. react-vis React visualization library created by Uber. */\r\nimport React from 'react';\r\nimport {\r\n    XYPlot,\r\n    VerticalBarSeries,\r\n    LabelSeries\r\n} from 'react-vis';\r\n\r\nclass BarChart extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: []\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        let data = nextProps.countryCount\r\n        this.setState({\r\n            data: [data]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const chartWidth = 400;\r\n        const chartHeight = 200;\r\n        const chartDomain = [0, 5];\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.data && this.state.data.length>0 ?\r\n                <XYPlot \r\n                xType=\"ordinal\" \r\n                width={chartWidth} \r\n                height={chartHeight} \r\n                yDomain={chartDomain}\r\n              >\r\n                 <VerticalBarSeries\r\n                     data={this.state.data[0]}\r\n                 />\r\n                 <LabelSeries\r\n                     data={this.state.data[0] && this.state.data.length>0 ?\r\n                         this.state.data[0].map(obj => {\r\n                         return { ...obj, label: (obj.x.toString()).concat(\"/\"+obj.y.toString()) }\r\n                     }):[]}\r\n                     labelAnchorX=\"middle\"\r\n                     labelAnchorY=\"text-after-edge\"\r\n                 />\r\n             </XYPlot>\r\n                :null}\r\n            \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default BarChart;","export const LAUNCH_ACTION = \"LAUNCH_ACTION\";","/**Root Component for Search. Connected to store and passing data to the child as props */\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from \"react-redux\";\r\nimport Table from '../components/table';\r\nimport BarChart from '../components/charts';\r\nimport { launchAction } from '../store/actions/launchAction';\r\n\r\nclass searchParameters extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n                startDate: \"\",\r\n                endDate: \"\",\r\n\r\n            dataSet: [],\r\n            countryCount: []\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n\r\n    handleInputChange(e) {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    search = async () => {\r\n        const queryParams = (this.state.startDate+\"/\").concat(this.state.endDate);\r\n        this.props.launchAction(queryParams);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        let countryObj = {};\r\n        let countryArray = [];\r\n        /**Getting Count for the country and making Array of Object out of that */\r\n        nextProps.searchResultsVo.forEach(function (i) {\r\n            if (countryObj[i.location.countryCode] == null) {\r\n                countryObj[i.location.countryCode] = 0;\r\n            }\r\n            countryObj[i.location.countryCode] += 1;\r\n        });\r\n        console.log(countryObj)\r\n\r\n        for (let key in countryObj) {\r\n            countryArray.push({\r\n                x: key,\r\n                y: countryObj[key]\r\n            })\r\n        };\r\n        console.log(countryArray)\r\n        this.setState({\r\n            dataSet: nextProps.searchResultsVo,\r\n            countryCount: countryArray\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state)\r\n        console.log(this.props)\r\n        return (\r\n            <React.Fragment>\r\n                <h2>Enter Values in (YYYY-MM-DD) Format and click on Search!</h2>\r\n                START DATE: <input type=\"text\"\r\n                    name=\"startDate\"\r\n                    id=\"startDate\"\r\n                    class=\"datepicker\"\r\n                    placeholder=\"YYYY-MM-DD\"\r\n                    value={this.state.startDate}\r\n                    onChange={this.handleInputChange} \r\n                    required/><br />\r\n                END DATE:&nbsp;&nbsp;&nbsp;&nbsp; <input type=\"text\"\r\n                   name=\"endDate\"\r\n                   id=\"endDate\"\r\n                   class=\"datepicker\"\r\n                   placeholder=\"YYYY-MM-DD\"\r\n                   value={this.state.endDate}\r\n                   onChange={this.handleInputChange} \r\n                   required/><br />\r\n                <br />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.search}>Search</Button>\r\n                <Table dataSet={this.state.dataSet} />\r\n                <BarChart countryCount={this.state.countryCount} />\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchResultsVo: state.launchData.searchResultList\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    launchAction\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(searchParameters);","/**GET Service Call with Start & End Date is passed as params */\r\n\r\nimport axios from 'axios';\r\nimport * as ActionTypes from \"../actionTypes\";\r\n\r\nexport const launchAction = (queryParams) => {\r\n    return async dispatch => {\r\n        return axios\r\n          .get('https://launchlibrary.net/1.4/launch/'+queryParams)\r\n          .then(response => {\r\n            dispatch({ type: ActionTypes.LAUNCH_ACTION, payload: response.data });\r\n          })\r\n          .catch(error => {\r\n           console.log(error)\r\n          });\r\n    };\r\n  };","import React from 'react';\nimport './App.css';\nimport SearchParameters from './components/searchParameters';\n\nfunction App() {\n  return (\n    <div>\n      <SearchParameters />\n    </div>\n  );\n}\n\nexport default App;\n","import * as ActionTypes from \"../actionTypes\";\r\n/**Based on Action Types and Payload we are changing the reducer state */\r\nconst initialState = {\r\n  searchResultList: []\r\n}\r\n\r\nexport default function launchReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n\r\n    case ActionTypes.LAUNCH_ACTION:\r\n    console.log(action.payload.launches);\r\n      return {\r\n        ...state,\r\n        searchResultList: action.payload.launches\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport searchResultList from './reducers/launchReducer';\r\n\r\nconst appReducer = combineReducers({\r\n    launchData: searchResultList\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../src/store/redux-store\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\n\nReactDOM.render(<Provider store={store}>\n<App />\n</Provider>\n, document.getElementById('root'));"],"sourceRoot":""}